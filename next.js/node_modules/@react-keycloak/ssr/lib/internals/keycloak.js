import { isServer } from './utils';
// Keycloak singleton
var keycloakInstance;
// KeycloakStub singleton
var keycloakStubInstance;
// this is a fake Keycloak instance we use to initialize Keycloak on the server.
// This gets over-written as soon as Keycloak is initialized on the client.
export var getKeycloakStub = function (persistor) {
    var kcTokens = persistor.getTokens();
    keycloakStubInstance = {
        init: function () { return Promise.resolve(true); },
        updateToken: function () { return Promise.resolve(false); },
        idToken: kcTokens.idToken,
        token: kcTokens.token,
        refreshToken: kcTokens.refreshToken,
        authenticated: !!kcTokens.idToken && !!kcTokens.token,
    };
    return keycloakStubInstance;
};
var Keycloak = !isServer() ? require('keycloak-js') : null;
export var getKeycloakInstance = function (keycloakConfig, persistor, recreate) {
    if (recreate === void 0) { recreate = false; }
    var isServerCheck = isServer();
    if (recreate || (!keycloakInstance && !isServerCheck)) {
        keycloakInstance = new Keycloak(keycloakConfig);
    }
    return !isServerCheck ? keycloakInstance : getKeycloakStub(persistor);
};
//# sourceMappingURL=keycloak.js.map